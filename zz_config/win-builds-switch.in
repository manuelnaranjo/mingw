#!/bin/awk /^#_/ { print gensub("^#_", "", "1") } END { exit 1 }
# The shebang above will display the message below for people who run the
# script in a new shell instead of sourcing it in their current shell.

#_!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#_
#_  ERROR!
#_
#_  This script is being executed in a separate shell while it has to execute
#_  in an already existing one.
#_
#_  This means you have started this script as "win-builds-switch 64" (or 32)
#_  while you need to prepend ". " in front of that command for it to be
#_  effective:
#_    source win-builds-switch 64
#_
#_  (and before you ask, while your mistake has been noticed automatically, it
#_  cannot be corrected automatically)
#_
#_!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

unset PKG_CONFIG_PATH
echo 'Unset ${PKG_CONFIG_LIBDIR}.' 1>&2

if [ x"$1" = x"clean" ]; then
  unset YYPREFIX
  echo 'Unset ${YYPREFIX}.' 1>&2
  unset PKG_CONFIG_LIBDIR
  echo 'Unset ${PKG_CONFIG_LIBDIR}.' 1>&2
  export PATH="$(echo "${PATH}" | sed -e 's;/opt/windows_../bin;;g' -e 's/::/:/g')"
  echo 'Set ${PATH}='"${PATH}"'.' 1>&2
else
  YYPREFIX=!{YYPREFIX}
  YYPATH="${YYPREFIX}/bin"
  if [ ! -d "${YYPATH}" ]; then
    echo "The ${YYPATH} directory doesn't exist; there cannot be a valid setup there." 1>&2
    return 1
  fi

  export PKG_CONFIG_LIBDIR="${YYPREFIX}/lib@@LIBDIRSUFFIX@@/pkgconfig"
  echo 'Set ${PKG_CONFIG_LIBDIR}='"${PKG_CONFIG_LIBDIR}"'.' 1>&2

  export YYPREFIX
  echo 'Set ${YYPREFIX}='"${YYPREFIX}"'.' 1>&2

  if ! grep '^CYGWIN' /proc/version >/dev/null 2>/dev/null; then
    case ":${PATH}:" in
      *:/opt/windows_??/bin:*)
        PATH="$(echo "${PATH}" | sed "s;/opt/windows_../bin;${YYPATH};g")" ;;
      *) PATH="${YYPATH}:${PATH}" ;;
    esac
    export PATH
    echo 'Set ${PATH}='"${PATH}"'.' 1>&2
  fi
fi
